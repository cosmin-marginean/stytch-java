package com.stytch.kotlin.consumer

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!
import com.stytch.kotlin.common.BASE_LIVE_URL
import com.stytch.kotlin.common.BASE_TEST_URL
import com.stytch.kotlin.common.JwtOptions
import com.stytch.kotlin.consumer.api.cryptowallets.CryptoWallets
import com.stytch.kotlin.consumer.api.cryptowallets.CryptoWalletsImpl
import com.stytch.kotlin.consumer.api.magiclinks.MagicLinks
import com.stytch.kotlin.consumer.api.magiclinks.MagicLinksImpl
import com.stytch.kotlin.consumer.api.oauth.OAuth
import com.stytch.kotlin.consumer.api.oauth.OAuthImpl
import com.stytch.kotlin.consumer.api.otp.OTPs
import com.stytch.kotlin.consumer.api.otp.OTPsImpl
import com.stytch.kotlin.consumer.api.passwords.Passwords
import com.stytch.kotlin.consumer.api.passwords.PasswordsImpl
import com.stytch.kotlin.consumer.api.sessions.Sessions
import com.stytch.kotlin.consumer.api.sessions.SessionsImpl
import com.stytch.kotlin.consumer.api.totps.TOTPs
import com.stytch.kotlin.consumer.api.totps.TOTPsImpl
import com.stytch.kotlin.consumer.api.users.Users
import com.stytch.kotlin.consumer.api.users.UsersImpl
import com.stytch.kotlin.consumer.api.webauthn.WebAuthn
import com.stytch.kotlin.consumer.api.webauthn.WebAuthnImpl
import com.stytch.kotlin.http.HttpClient
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.SupervisorJob
import org.jose4j.jwk.HttpsJwks

public object StytchClient {
    private lateinit var httpClient: HttpClient
    private lateinit var httpsJwks: HttpsJwks
    private lateinit var jwtOptions: JwtOptions
    public lateinit var cryptoWallets: CryptoWallets
    public lateinit var magicLinks: MagicLinks
    public lateinit var oAuth: OAuth
    public lateinit var oTPs: OTPs
    public lateinit var passwords: Passwords
    public lateinit var sessions: Sessions
    public lateinit var tOTPs: TOTPs
    public lateinit var users: Users
    public lateinit var webAuthn: WebAuthn

    public fun configure(projectId: String, secret: String) {
        val baseUrl = getBaseUrl(projectId)
        httpClient = HttpClient(
            baseUrl = baseUrl,
            projectId = projectId,
            secret = secret,
        )
        jwtOptions = JwtOptions(
            audience = projectId,
            issuer = "stytch.com/$projectId",
            type = "JWT",
        )
        val coroutineScope = CoroutineScope(SupervisorJob())
        httpsJwks = HttpsJwks("$baseUrl/v1/sessions/jwks/$projectId")
        cryptoWallets = CryptoWalletsImpl(httpClient, coroutineScope)
        magicLinks = MagicLinksImpl(httpClient, coroutineScope)
        oAuth = OAuthImpl(httpClient, coroutineScope)
        oTPs = OTPsImpl(httpClient, coroutineScope)
        passwords = PasswordsImpl(httpClient, coroutineScope)
        sessions = SessionsImpl(httpClient, coroutineScope, httpsJwks, jwtOptions)
        tOTPs = TOTPsImpl(httpClient, coroutineScope)
        users = UsersImpl(httpClient, coroutineScope)
        webAuthn = WebAuthnImpl(httpClient, coroutineScope)
    }

    /**
     * Resolve the base URL for the Stytch API environment.
     */
    private fun getBaseUrl(projectId: String): String = when (projectId.contains("test")) {
        true -> BASE_TEST_URL
        false -> BASE_LIVE_URL
    }
}
